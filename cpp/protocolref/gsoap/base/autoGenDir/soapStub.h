/* soapStub.h
   Generated by gSOAP 2.8.43 for autoGenDir/serviceInternal.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <deque>
#include <list>
#include <vector>
#include <set>
#define SOAP_NAMESPACE_OF_qhjkdsf	"http://www.ylink.com.cn/qhjkdsf.wsdl"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20843
# error "GSOAP VERSION 20843 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class qhjkdsf__requestBody;	/* autoGenDir/serviceInternal.h:189 */
class qhjkdsf__responseBody;	/* autoGenDir/serviceInternal.h:192 */
struct __qhjkdsf__dsf;	/* autoGenDir/serviceInternal.h:509 */

/* autoGenDir/serviceInternal.h:189 */
#ifndef SOAP_TYPE_qhjkdsf__requestBody
#define SOAP_TYPE_qhjkdsf__requestBody (26)
/* complex XSD type 'qhjkdsf:requestBody': */
class SOAP_CMAC qhjkdsf__requestBody {
      public:
        /// Required element 'qhjkdsf:msgtype' of XSD type 'xsd:Max20Text'
        std::string msgtype;
        /// Required element 'qhjkdsf:version' of XSD type 'xsd:Version'
        std::string version;
        /// Required element 'qhjkdsf:subnode' of XSD type 'xsd:string'
        std::string subnode;
        /// Required element 'qhjkdsf:sendtime' of XSD type 'xsd:SendTime'
        std::string sendtime;
        /// Required element 'qhjkdsf:msgno' of XSD type 'xsd:Max14NumericText'
        std::string msgno;
        /// Required element 'qhjkdsf:resptype' of XSD type 'xsd:Resptype'
        std::string resptype;
        /// Required element 'qhjkdsf:ziptype' of XSD type 'xsd:ZipType'
        std::string ziptype;
        /// Optional element 'qhjkdsf:returnencrypt' of XSD type 'xsd:ReturnEncrypt'
        std::string *returnencrypt;
        /// Required element 'qhjkdsf:gatewayversion' of XSD type 'xsd:GatewayVersion'
        std::string gatewayversion;
        /// Optional element 'qhjkdsf:respurl' of XSD type 'xsd:Max127Text'
        std::string *respurl;
        /// Required element 'qhjkdsf:signature' of XSD type 'xsd:Signature'
        std::string signature;
        /// Required element 'qhjkdsf:msgbody' of XSD type 'xsd:MsgBody'
        std::string msgbody;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_qhjkdsf__requestBody
        virtual int soap_type(void) const { return SOAP_TYPE_qhjkdsf__requestBody; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type qhjkdsf__requestBody, default initialized and not managed by a soap context
        virtual qhjkdsf__requestBody *soap_alloc(void) const { return SOAP_NEW(qhjkdsf__requestBody); }
      public:
        /// Constructor with initializations
        qhjkdsf__requestBody()
        {
          returnencrypt = (std::string *)0;
          respurl = (std::string *)0;
          soap = (struct soap *)0;
        }
        virtual ~qhjkdsf__requestBody() { }
        /// Friend allocator used by soap_new_qhjkdsf__requestBody(struct soap*, int)
        friend SOAP_FMAC1 qhjkdsf__requestBody * SOAP_FMAC2 soap_instantiate_qhjkdsf__requestBody(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* autoGenDir/serviceInternal.h:192 */
#ifndef SOAP_TYPE_qhjkdsf__responseBody
#define SOAP_TYPE_qhjkdsf__responseBody (27)
/* complex XSD type 'qhjkdsf:responseBody': */
class SOAP_CMAC qhjkdsf__responseBody {
      public:
        /// Required element 'qhjkdsf:bodyzip' of XSD type 'xsd:BodyZip'
        std::string bodyzip;
        /// Required element 'qhjkdsf:bodyencrypt' of XSD type 'xsd:BodyEncrypt'
        std::string bodyencrypt;
        /// Required element 'qhjkdsf:signature' of XSD type 'xsd:Signature'
        std::string signature;
        /// Required element 'qhjkdsf:msgbody' of XSD type 'xsd:MsgBody'
        std::string msgbody;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_qhjkdsf__responseBody
        virtual int soap_type(void) const { return SOAP_TYPE_qhjkdsf__responseBody; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type qhjkdsf__responseBody, default initialized and not managed by a soap context
        virtual qhjkdsf__responseBody *soap_alloc(void) const { return SOAP_NEW(qhjkdsf__responseBody); }
      public:
        /// Constructor with initializations
        qhjkdsf__responseBody()
        {
          soap = (struct soap *)0;
        }
        virtual ~qhjkdsf__responseBody() { }
        /// Friend allocator used by soap_new_qhjkdsf__responseBody(struct soap*, int)
        friend SOAP_FMAC1 qhjkdsf__responseBody * SOAP_FMAC2 soap_instantiate_qhjkdsf__responseBody(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* autoGenDir/serviceInternal.h:509 */
#ifndef SOAP_TYPE___qhjkdsf__dsf
#define SOAP_TYPE___qhjkdsf__dsf (48)
/* Wrapper: */
struct SOAP_CMAC __qhjkdsf__dsf {
      public:
        /** Optional element 'qhjkdsf:reqBody' of XSD type 'qhjkdsf:requestBody' */
        qhjkdsf__requestBody *reqBody;
      public:
        /** Return unique type id SOAP_TYPE___qhjkdsf__dsf */
        int soap_type() const { return SOAP_TYPE___qhjkdsf__dsf; }
        /** Constructor with member initializations */
        __qhjkdsf__dsf()
        {
          reqBody = (qhjkdsf__requestBody *)0;
        }
        /** Friend allocator used by soap_new___qhjkdsf__dsf(struct soap*, int) */
        friend SOAP_FMAC1 __qhjkdsf__dsf * SOAP_FMAC2 soap_instantiate___qhjkdsf__dsf(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* autoGenDir/serviceInternal.h:570 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (49)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header()
        {
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Header(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* autoGenDir/serviceInternal.h:570 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (50)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code()
        {
          SOAP_ENV__Value = (char *)0;
          SOAP_ENV__Subcode = (struct SOAP_ENV__Code *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Code(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* autoGenDir/serviceInternal.h:570 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (52)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail()
        {
          __any = (char *)0;
          __type = 0;
          fault = NULL;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Detail(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* autoGenDir/serviceInternal.h:570 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (55)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason()
        {
          SOAP_ENV__Text = (char *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Reason(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* autoGenDir/serviceInternal.h:570 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (56)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault()
        {
          faultcode = (char *)0;
          faultstring = (char *)0;
          faultactor = (char *)0;
          detail = (struct SOAP_ENV__Detail *)0;
          SOAP_ENV__Code = (struct SOAP_ENV__Code *)0;
          SOAP_ENV__Reason = (struct SOAP_ENV__Reason *)0;
          SOAP_ENV__Node = (char *)0;
          SOAP_ENV__Role = (char *)0;
          SOAP_ENV__Detail = (struct SOAP_ENV__Detail *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Fault(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* autoGenDir/serviceInternal.h:101 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* autoGenDir/serviceInternal.h:101 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/* autoGenDir/serviceInternal.h:139 */
#ifndef SOAP_TYPE_xsd__BodyEncrypt
#define SOAP_TYPE_xsd__BodyEncrypt (12)
typedef std::string xsd__BodyEncrypt;
#endif

/* autoGenDir/serviceInternal.h:142 */
#ifndef SOAP_TYPE_xsd__BodyZip
#define SOAP_TYPE_xsd__BodyZip (13)
typedef std::string xsd__BodyZip;
#endif

/* autoGenDir/serviceInternal.h:145 */
#ifndef SOAP_TYPE_xsd__GatewayVersion
#define SOAP_TYPE_xsd__GatewayVersion (14)
typedef std::string xsd__GatewayVersion;
#endif

/* autoGenDir/serviceInternal.h:148 */
#ifndef SOAP_TYPE_xsd__Max127Text
#define SOAP_TYPE_xsd__Max127Text (15)
typedef std::string xsd__Max127Text;
#endif

/* autoGenDir/serviceInternal.h:151 */
#ifndef SOAP_TYPE_xsd__Max14NumericText
#define SOAP_TYPE_xsd__Max14NumericText (16)
typedef std::string xsd__Max14NumericText;
#endif

/* autoGenDir/serviceInternal.h:154 */
#ifndef SOAP_TYPE_xsd__Max20Text
#define SOAP_TYPE_xsd__Max20Text (17)
typedef std::string xsd__Max20Text;
#endif

/* autoGenDir/serviceInternal.h:157 */
#ifndef SOAP_TYPE_xsd__MsgBody
#define SOAP_TYPE_xsd__MsgBody (18)
typedef std::string xsd__MsgBody;
#endif

/* autoGenDir/serviceInternal.h:160 */
#ifndef SOAP_TYPE_xsd__Resptype
#define SOAP_TYPE_xsd__Resptype (19)
typedef std::string xsd__Resptype;
#endif

/* autoGenDir/serviceInternal.h:163 */
#ifndef SOAP_TYPE_xsd__ReturnEncrypt
#define SOAP_TYPE_xsd__ReturnEncrypt (20)
typedef std::string xsd__ReturnEncrypt;
#endif

/* autoGenDir/serviceInternal.h:166 */
#ifndef SOAP_TYPE_xsd__SendTime
#define SOAP_TYPE_xsd__SendTime (21)
typedef std::string xsd__SendTime;
#endif

/* autoGenDir/serviceInternal.h:169 */
#ifndef SOAP_TYPE_xsd__Signature
#define SOAP_TYPE_xsd__Signature (22)
typedef std::string xsd__Signature;
#endif

/* autoGenDir/serviceInternal.h:172 */
#ifndef SOAP_TYPE_xsd__Version
#define SOAP_TYPE_xsd__Version (23)
typedef std::string xsd__Version;
#endif

/* autoGenDir/serviceInternal.h:175 */
#ifndef SOAP_TYPE_xsd__ZipType
#define SOAP_TYPE_xsd__ZipType (24)
typedef std::string xsd__ZipType;
#endif

/* autoGenDir/serviceInternal.h:178 */
#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (25)
typedef std::string xsd__decimal;
#endif

/* autoGenDir/serviceInternal.h:205 */
#ifndef SOAP_TYPE_qhjkdsf__Max20Text
#define SOAP_TYPE_qhjkdsf__Max20Text (28)
typedef std::string qhjkdsf__Max20Text;
#endif

/* autoGenDir/serviceInternal.h:211 */
#ifndef SOAP_TYPE_qhjkdsf__Version
#define SOAP_TYPE_qhjkdsf__Version (29)
typedef xsd__decimal qhjkdsf__Version;
#endif

/* autoGenDir/serviceInternal.h:215 */
#ifndef SOAP_TYPE_qhjkdsf__SendTime
#define SOAP_TYPE_qhjkdsf__SendTime (31)
typedef time_t qhjkdsf__SendTime;
#endif

/* autoGenDir/serviceInternal.h:219 */
#ifndef SOAP_TYPE_qhjkdsf__Max14NumericText
#define SOAP_TYPE_qhjkdsf__Max14NumericText (32)
typedef std::string qhjkdsf__Max14NumericText;
#endif

/* autoGenDir/serviceInternal.h:223 */
#ifndef SOAP_TYPE_qhjkdsf__Resptype
#define SOAP_TYPE_qhjkdsf__Resptype (33)
typedef std::string qhjkdsf__Resptype;
#endif

/* autoGenDir/serviceInternal.h:227 */
#ifndef SOAP_TYPE_qhjkdsf__ZipType
#define SOAP_TYPE_qhjkdsf__ZipType (34)
typedef std::string qhjkdsf__ZipType;
#endif

/* autoGenDir/serviceInternal.h:231 */
#ifndef SOAP_TYPE_qhjkdsf__ReturnEncrypt
#define SOAP_TYPE_qhjkdsf__ReturnEncrypt (35)
typedef std::string qhjkdsf__ReturnEncrypt;
#endif

/* autoGenDir/serviceInternal.h:235 */
#ifndef SOAP_TYPE_qhjkdsf__GatewayVersion
#define SOAP_TYPE_qhjkdsf__GatewayVersion (36)
typedef std::string qhjkdsf__GatewayVersion;
#endif

/* autoGenDir/serviceInternal.h:240 */
#ifndef SOAP_TYPE_qhjkdsf__Max127Text
#define SOAP_TYPE_qhjkdsf__Max127Text (37)
typedef std::string qhjkdsf__Max127Text;
#endif

/* autoGenDir/serviceInternal.h:244 */
#ifndef SOAP_TYPE_qhjkdsf__BodyZip
#define SOAP_TYPE_qhjkdsf__BodyZip (38)
typedef std::string qhjkdsf__BodyZip;
#endif

/* autoGenDir/serviceInternal.h:248 */
#ifndef SOAP_TYPE_qhjkdsf__BodyEncrypt
#define SOAP_TYPE_qhjkdsf__BodyEncrypt (39)
typedef std::string qhjkdsf__BodyEncrypt;
#endif

/* autoGenDir/serviceInternal.h:252 */
#ifndef SOAP_TYPE_qhjkdsf__Signature
#define SOAP_TYPE_qhjkdsf__Signature (40)
typedef std::string qhjkdsf__Signature;
#endif

/* autoGenDir/serviceInternal.h:256 */
#ifndef SOAP_TYPE_qhjkdsf__MsgBody
#define SOAP_TYPE_qhjkdsf__MsgBody (41)
typedef std::string qhjkdsf__MsgBody;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* qhjkdsf__SendTime has binding name 'qhjkdsf__SendTime' for type 'qhjkdsf:SendTime' */
#ifndef SOAP_TYPE_qhjkdsf__SendTime
#define SOAP_TYPE_qhjkdsf__SendTime (31)
#endif

/* time_t has binding name 'dateTime' for type 'xsd:dateTime' */
#ifndef SOAP_TYPE_dateTime
#define SOAP_TYPE_dateTime (30)
#endif

/* qhjkdsf__MsgBody has binding name 'qhjkdsf__MsgBody' for type 'qhjkdsf:MsgBody' */
#ifndef SOAP_TYPE_qhjkdsf__MsgBody
#define SOAP_TYPE_qhjkdsf__MsgBody (41)
#endif

/* qhjkdsf__Signature has binding name 'qhjkdsf__Signature' for type 'qhjkdsf:Signature' */
#ifndef SOAP_TYPE_qhjkdsf__Signature
#define SOAP_TYPE_qhjkdsf__Signature (40)
#endif

/* qhjkdsf__BodyEncrypt has binding name 'qhjkdsf__BodyEncrypt' for type 'qhjkdsf:BodyEncrypt' */
#ifndef SOAP_TYPE_qhjkdsf__BodyEncrypt
#define SOAP_TYPE_qhjkdsf__BodyEncrypt (39)
#endif

/* qhjkdsf__BodyZip has binding name 'qhjkdsf__BodyZip' for type 'qhjkdsf:BodyZip' */
#ifndef SOAP_TYPE_qhjkdsf__BodyZip
#define SOAP_TYPE_qhjkdsf__BodyZip (38)
#endif

/* qhjkdsf__Max127Text has binding name 'qhjkdsf__Max127Text' for type 'qhjkdsf:Max127Text' */
#ifndef SOAP_TYPE_qhjkdsf__Max127Text
#define SOAP_TYPE_qhjkdsf__Max127Text (37)
#endif

/* qhjkdsf__GatewayVersion has binding name 'qhjkdsf__GatewayVersion' for type 'qhjkdsf:GatewayVersion' */
#ifndef SOAP_TYPE_qhjkdsf__GatewayVersion
#define SOAP_TYPE_qhjkdsf__GatewayVersion (36)
#endif

/* qhjkdsf__ReturnEncrypt has binding name 'qhjkdsf__ReturnEncrypt' for type 'qhjkdsf:ReturnEncrypt' */
#ifndef SOAP_TYPE_qhjkdsf__ReturnEncrypt
#define SOAP_TYPE_qhjkdsf__ReturnEncrypt (35)
#endif

/* qhjkdsf__ZipType has binding name 'qhjkdsf__ZipType' for type 'qhjkdsf:ZipType' */
#ifndef SOAP_TYPE_qhjkdsf__ZipType
#define SOAP_TYPE_qhjkdsf__ZipType (34)
#endif

/* qhjkdsf__Resptype has binding name 'qhjkdsf__Resptype' for type 'qhjkdsf:Resptype' */
#ifndef SOAP_TYPE_qhjkdsf__Resptype
#define SOAP_TYPE_qhjkdsf__Resptype (33)
#endif

/* qhjkdsf__Max14NumericText has binding name 'qhjkdsf__Max14NumericText' for type 'qhjkdsf:Max14NumericText' */
#ifndef SOAP_TYPE_qhjkdsf__Max14NumericText
#define SOAP_TYPE_qhjkdsf__Max14NumericText (32)
#endif

/* qhjkdsf__Version has binding name 'qhjkdsf__Version' for type 'qhjkdsf:Version' */
#ifndef SOAP_TYPE_qhjkdsf__Version
#define SOAP_TYPE_qhjkdsf__Version (29)
#endif

/* qhjkdsf__Max20Text has binding name 'qhjkdsf__Max20Text' for type 'qhjkdsf:Max20Text' */
#ifndef SOAP_TYPE_qhjkdsf__Max20Text
#define SOAP_TYPE_qhjkdsf__Max20Text (28)
#endif

/* qhjkdsf__responseBody has binding name 'qhjkdsf__responseBody' for type 'qhjkdsf:responseBody' */
#ifndef SOAP_TYPE_qhjkdsf__responseBody
#define SOAP_TYPE_qhjkdsf__responseBody (27)
#endif

/* qhjkdsf__requestBody has binding name 'qhjkdsf__requestBody' for type 'qhjkdsf:requestBody' */
#ifndef SOAP_TYPE_qhjkdsf__requestBody
#define SOAP_TYPE_qhjkdsf__requestBody (26)
#endif

/* xsd__decimal has binding name 'xsd__decimal' for type 'xsd:decimal' */
#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (25)
#endif

/* xsd__ZipType has binding name 'xsd__ZipType' for type 'xsd:ZipType' */
#ifndef SOAP_TYPE_xsd__ZipType
#define SOAP_TYPE_xsd__ZipType (24)
#endif

/* xsd__Version has binding name 'xsd__Version' for type 'xsd:Version' */
#ifndef SOAP_TYPE_xsd__Version
#define SOAP_TYPE_xsd__Version (23)
#endif

/* xsd__Signature has binding name 'xsd__Signature' for type 'xsd:Signature' */
#ifndef SOAP_TYPE_xsd__Signature
#define SOAP_TYPE_xsd__Signature (22)
#endif

/* xsd__SendTime has binding name 'xsd__SendTime' for type 'xsd:SendTime' */
#ifndef SOAP_TYPE_xsd__SendTime
#define SOAP_TYPE_xsd__SendTime (21)
#endif

/* xsd__ReturnEncrypt has binding name 'xsd__ReturnEncrypt' for type 'xsd:ReturnEncrypt' */
#ifndef SOAP_TYPE_xsd__ReturnEncrypt
#define SOAP_TYPE_xsd__ReturnEncrypt (20)
#endif

/* xsd__Resptype has binding name 'xsd__Resptype' for type 'xsd:Resptype' */
#ifndef SOAP_TYPE_xsd__Resptype
#define SOAP_TYPE_xsd__Resptype (19)
#endif

/* xsd__MsgBody has binding name 'xsd__MsgBody' for type 'xsd:MsgBody' */
#ifndef SOAP_TYPE_xsd__MsgBody
#define SOAP_TYPE_xsd__MsgBody (18)
#endif

/* xsd__Max20Text has binding name 'xsd__Max20Text' for type 'xsd:Max20Text' */
#ifndef SOAP_TYPE_xsd__Max20Text
#define SOAP_TYPE_xsd__Max20Text (17)
#endif

/* xsd__Max14NumericText has binding name 'xsd__Max14NumericText' for type 'xsd:Max14NumericText' */
#ifndef SOAP_TYPE_xsd__Max14NumericText
#define SOAP_TYPE_xsd__Max14NumericText (16)
#endif

/* xsd__Max127Text has binding name 'xsd__Max127Text' for type 'xsd:Max127Text' */
#ifndef SOAP_TYPE_xsd__Max127Text
#define SOAP_TYPE_xsd__Max127Text (15)
#endif

/* xsd__GatewayVersion has binding name 'xsd__GatewayVersion' for type 'xsd:GatewayVersion' */
#ifndef SOAP_TYPE_xsd__GatewayVersion
#define SOAP_TYPE_xsd__GatewayVersion (14)
#endif

/* xsd__BodyZip has binding name 'xsd__BodyZip' for type 'xsd:BodyZip' */
#ifndef SOAP_TYPE_xsd__BodyZip
#define SOAP_TYPE_xsd__BodyZip (13)
#endif

/* xsd__BodyEncrypt has binding name 'xsd__BodyEncrypt' for type 'xsd:BodyEncrypt' */
#ifndef SOAP_TYPE_xsd__BodyEncrypt
#define SOAP_TYPE_xsd__BodyEncrypt (12)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (11)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (56)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (55)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (52)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (50)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (49)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (58)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (57)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (51)
#endif

/* qhjkdsf__requestBody * has binding name 'PointerToqhjkdsf__requestBody' for type 'qhjkdsf:requestBody' */
#ifndef SOAP_TYPE_PointerToqhjkdsf__requestBody
#define SOAP_TYPE_PointerToqhjkdsf__requestBody (45)
#endif

/* std::string * has binding name 'PointerToxsd__Max127Text' for type 'xsd:Max127Text' */
#ifndef SOAP_TYPE_PointerToxsd__Max127Text
#define SOAP_TYPE_PointerToxsd__Max127Text (43)
#endif

/* std::string * has binding name 'PointerToxsd__ReturnEncrypt' for type 'xsd:ReturnEncrypt' */
#ifndef SOAP_TYPE_PointerToxsd__ReturnEncrypt
#define SOAP_TYPE_PointerToxsd__ReturnEncrypt (42)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
